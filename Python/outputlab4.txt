Receiving the volume of the jugs...
Enter first jug volume (>1): 4
Enter second jug volume (>1): 3
Receiving the desired amount of the water...
Enter the desired amount of water (1 - 4): 2
Implementing BFS...
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 0] is visited before...
Checking if [0, 3] is visited before...
Checking if [0, 0] is visited before...
Checking if [0, 0] is visited before...
Checking if [0, 0] is visited before...
Checking if [0, 0] is visited before...
Possible transitions: 
[4, 0]
[0, 3]
Pour 4-liter jug into 3-liter jug:	 [4, 0]
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 0] is visited before...
Checking if [4, 3] is visited before...
Checking if [4, 0] is visited before...
Checking if [1, 3] is visited before...
Checking if [0, 0] is visited before...
Checking if [4, 0] is visited before...
Possible transitions: 
[4, 3]
[1, 3]
Pour 4-liter jug into 3-liter jug:	 [0, 3]
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 3] is visited before...
Checking if [0, 3] is visited before...
Checking if [3, 0] is visited before...
Checking if [0, 3] is visited before...
Checking if [0, 3] is visited before...
Checking if [0, 0] is visited before...
Possible transitions: 
[4, 3]
[3, 0]
Pour 4-liter jug into 3-liter jug:	 [4, 3]
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 3] is visited before...
Checking if [4, 3] is visited before...
Checking if [4, 3] is visited before...
Checking if [4, 3] is visited before...
Checking if [0, 3] is visited before...
Checking if [4, 0] is visited before...
No more unvisited nodes...
Backtracking...
Pour 4-liter jug into 3-liter jug:	 [1, 3]
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 3] is visited before...
Checking if [1, 3] is visited before...
Checking if [4, 0] is visited before...
Checking if [1, 3] is visited before...
Checking if [0, 3] is visited before...
Checking if [1, 0] is visited before...
Possible transitions: 
[1, 0]
Pour 4-liter jug into 3-liter jug:	 [4, 3]
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 3] is visited before...
Checking if [4, 3] is visited before...
Checking if [4, 3] is visited before...
Checking if [4, 3] is visited before...
Checking if [0, 3] is visited before...
Checking if [4, 0] is visited before...
No more unvisited nodes...
Backtracking...
Pour 4-liter jug into 3-liter jug:	 [3, 0]
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 0] is visited before...
Checking if [3, 3] is visited before...
Checking if [3, 0] is visited before...
Checking if [0, 3] is visited before...
Checking if [0, 0] is visited before...
Checking if [3, 0] is visited before...
Possible transitions: 
[3, 3]
Pour 4-liter jug into 3-liter jug:	 [1, 0]
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 0] is visited before...
Checking if [1, 3] is visited before...
Checking if [1, 0] is visited before...
Checking if [0, 1] is visited before...
Checking if [0, 0] is visited before...
Checking if [1, 0] is visited before...
Possible transitions: 
[0, 1]
Pour 4-liter jug into 3-liter jug:	 [3, 3]
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 3] is visited before...
Checking if [3, 3] is visited before...
Checking if [4, 2] is visited before...
Checking if [3, 3] is visited before...
Checking if [0, 3] is visited before...
Checking if [3, 0] is visited before...
Possible transitions: 
[4, 2]
Pour 4-liter jug into 3-liter jug:	 [0, 1]
Checking if the goal is achieved...
Finding next transitions and checking for the loops...
Checking if [4, 1] is visited before...
Checking if [0, 3] is visited before...
Checking if [1, 0] is visited before...
Checking if [0, 1] is visited before...
Checking if [0, 1] is visited before...
Checking if [0, 0] is visited before...
Possible transitions: 
[4, 1]
Pour 4-liter jug into 3-liter jug:	 [4, 2]
Checking if the goal is achieved...
The goal is achieved
Printing the sequence of the moves...

Starting from:				 [0, 0]
1 : Pour 4-liter jug into 3-liter jug:	 [0, 3]
2 : Pour 4-liter jug into 3-liter jug:	 [3, 0]
3 : Pour 4-liter jug into 3-liter jug:	 [3, 3]
4 : Pour 4-liter jug into 3-liter jug:	 [4, 2]
